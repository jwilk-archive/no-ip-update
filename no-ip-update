#!/usr/bin/env python3

# Copyright © 2013-2017 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import argparse
import base64
import getpass
import http.client
import netrc
import urllib.parse
import urllib.request

http_headers = {
    'User-Agent': 'no-ip-update (https://github.com/jwilk/no-ip-update)'
}

def wget(url, *, user, password):
    auth = '{user}:{password}'.format(user=user, password=password)
    auth = auth.encode('ASCII')
    auth = base64.standard_b64encode(auth)
    auth = auth.decode('ASCII')
    headers = dict(http_headers)
    headers['Authorization'] = 'Basic {auth}'.format(auth=auth)
    request = urllib.request.Request(url, headers=headers)
    with urllib.request.urlopen(request, cadefault=True) as fp:
        return fp.read()

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('-u', '--user', metavar='<user>')
    ap.add_argument('-p', '--password', metavar='<password>')
    ap.add_argument('--netrc', action='store_true')
    ap.add_argument('--ip', metavar='<ip>')
    ap.add_argument('--debug', action='store_true')
    ap.add_argument('hosts', metavar='<host>', nargs='+')
    options = ap.parse_args()
    if options.debug:
        http.client.HTTPConnection.debuglevel = 1
    if options.netrc:
        authinfo = netrc.netrc().authenticators('dynupdate.no-ip.com')
        if authinfo is None:
            ap.error('missing netrc entry for dynupdate.no-ip.com')
        (user, _, password) = authinfo
        if (options.user is not None) and (user != options.user):
            ap.error('netrc user mismatch: {} != {}'.format(user, options.user))
        options.user = user
        options.password = password
    if options.user is None:
        options.user = getpass.getuser()
    if options.password is None:
        options.password = getpass.getpass('dynupdate.no-ip.com password for {}: '.format(options.user))
    for host in options.hosts:
        url = 'https://dynupdate.no-ip.com/nic/update?hostname=' + urllib.parse.quote(host)
        if options.ip is not None:
            url += '&myip=' + urllib.parse.quote(options.ip)
        text = wget(url, user=options.user, password=options.password)
        text = text.decode('ASCII').strip()
        if not text.startswith('good '):
            print('{host}: {text}'.format(host=host, text=text))

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
